name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/realsakibuddinmahmud/dea-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest

  migrate-staging:
    needs: build-and-push
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: tenant_demo
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -psecret"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Wait for MySQL
        run: |
          for i in {1..30}; do mysql -h127.0.0.1 -uroot -psecret -e "SELECT 1" && break || sleep 2; done

      - name: Pull image
        run: docker pull ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Run landlord migrations (if any)
        run: |
          docker run --rm --network host \
            -e APP_ENV=production \
            -e DB_HOST=127.0.0.1 \
            -e DB_USERNAME=root \
            -e DB_PASSWORD=secret \
            -e DB_DATABASE=landlord_master \
            ${{ env.IMAGE_NAME }}:${{ github.sha }} php artisan migrate --force || true

      - name: Run tenant migrations
        run: |
          docker run --rm --network host \
            -e APP_ENV=production \
            -e DATABASE_URL_TENANT=mysql://root:secret@127.0.0.1:3306/tenant_demo?charset=utf8mb4 \
            ${{ env.IMAGE_NAME }}:${{ github.sha }} php artisan migrate --force --database=tenant --path=database/migrations/tenant

      - name: Health smoke
        run: |
          cid=$(docker run -d --network host -e APP_ENV=production ${{ env.IMAGE_NAME }}:${{ github.sha }})
          for i in {1..15}; do curl -sf http://127.0.0.1:80/health && ok=1 && break || sleep 2; done; [ "$ok" = "1" ]
          docker rm -f "$cid" || true

  canary:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production-canary
    steps:
      - name: Canary run image on alternate port
        run: |
          docker run -d --name app-canary -p 8082:80 \
            -e APP_ENV=production ${{ env.IMAGE_NAME }}:${{ github.sha }}
          for i in {1..15}; do curl -sf http://127.0.0.1:8082/health && ok=1 && break || sleep 2; done; [ "$ok" = "1" ]
      - name: Stop canary
        if: always()
        run: docker rm -f app-canary || true

  promote:
    needs: [canary]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Promote instructions
        run: |
          echo "Canary passed. Promote image ${{ env.IMAGE_NAME }}:${{ github.sha }} to production by pulling on hosts and swapping traffic."
          echo "Example (blue/green): docker compose pull && docker compose up -d"

